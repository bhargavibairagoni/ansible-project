---
- hosts: localhost
  become: yes
  gather_facts: false #if you want to hide the host key verification option then use gather_facts: false #####
  vars_files:
    - secrets.yml
  tasks:

### VPC Creation ####

    - ec2_vpc_net:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        cidr_block: "{{ vpc_cidr_block }}"
        name: "{{ vpc_name }}"
        region: "{{ region }}"
        # enable dns support
        dns_support: yes
        # enable dns hostnames
        dns_hostnames: yes
        tenancy: default
        state: absent  # to delete Vpc then replace absent instead of presnt
      register: vpc_result

#### Internet gateway Creation #######

    - ec2_vpc_igw:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        vpc_id: "vpc-06e4c2ec3c519737b"
        region: "{{ region }}"
        state: absent
        tags:
          Name: "{{ igw_name }}"
      register: igw_result

 ## create an vpc pub subnet


    - ec2_vpc_subnet:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        vpc_id: "vpc-06e4c2ec3c519737b"
        region: "{{ region }}"
        az: "{{ pubzone }}"      # az is the availability zone
        state: absent
        cidr: "{{ pubsubnet_cidr_block }}"
        # enable public ip
        map_public: yes
        resource_tags:
          Name: "{{ pubsubnet_name }}"
      register: pubsubnet_result

    ## create an vpc pvt subnet


    - ec2_vpc_subnet:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        vpc_id: "vpc-06e4c2ec3c519737b"
        region: "{{ region }}"
        az: "{{ pvtzone }}"      # az is the availability zone
        state: absent
        cidr: "{{ pvtsubnet_cidr_block }}"
        # enable public ip
        map_public: no
        resource_tags:
          Name: "{{ pvtsubnet_name }}"
      register: pvtsubnet_result

## create an vpc pub route table


    - ec2_vpc_route_table:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        vpc_id: "vpc-06e4c2ec3c519737b"
        region: "{{ region }}"
        state: absent
        tags:
          Name: "{{ pubroute_table_name }}"
        subnets: [ "subnet-0331f16f9f4d61d25" ]
        # create routes
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "igw-03f94051d1e912c32"
      register: public_route_table

    ## create an vpc pvt route table


    - ec2_vpc_route_table:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        vpc_id: "vpc-06e4c2ec3c519737b"
        region: "{{ region }}"
        state: absent
        tags:
          Name: "{{ pvtroute_table_name }}"
        subnets: [ "subnet-05d86522d1eadaa4d" ]
      register: private_route_table

   ## create an vpc security groups


    - ec2_group:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        vpc_id: "vpc-06e4c2ec3c519737b"
        region: "{{ region }}"
        state: absent
        name: "{{ security_group_name }}"
        description: allow
        tags:
          Name: bhargavi-sg
        rules:
        - proto: all
          cidr_ip: 0.0.0.0/0
          rule_desc: allow all traffic
      register: security_group_results


   ## tasks file for ec2-launch ##


    - ec2:
        image: ami-0ca9fb66e076a6e32
        instance_id: "i-015e979638e85eac0"
        instance_type: "{{ type }}"
        region: "{{ region }}"
        wait: yes
        count: 1
        state: absent
        vpc_subnet_id: "subnet-0331f16f9f4d61d25"
        assign_public_ip: yes
        group_id: "sg-0aa1c1b84ae6f1cb5"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        instance_tags:
                Name: "{{ instance_name }}"

## in other file use the below code 
#---
#- hosts: localhost
# become: yes
# gather_facts: false #if you want to hide the host key verification option then use gather_facts: false #####
# vars_files:
#   - secret.yml
# tasks:

##AWS credentials
aws_access_key: ""
aws_secret_key: ""
title: "ARTH"

# VPC configuration
#
vpc_name: bhargavi_vpc
vpc_cidr_block: '11.0.0.0/16'
region: "us-east-1"


# Internet Gateway configuration
#
igw_name: bhargavi_igw

# Public Subnet configuration
#
pubsubnet_name: bhargavi_pub
pubsubnet_cidr_block: '11.0.1.0/24'
pubzone: "us-east-1a"

# Private Subnet configuration
#
pvtsubnet_name: bhargavi_pvt
pvtsubnet_cidr_block: '11.0.2.0/24'
pvtzone: "us-east-1b"

# Public Route Table configuration
#
pubroute_table_name: bhargavi_pub_rt

# Private Route Table configuration
#
pvtroute_table_name: bhargavi_pvt_rt

# Security Group configuration
#
security_group_name: bhargavi_sg
destination_cidr_block: '0.0.0.0/0'
port22_cidr_block: '0.0.0.0/0'


# EC2 Instance configuration
#
image_id: "ami-0ca9fb66e076a6e32"
type: "t2.micro"
instance_name: Bhargavi-outline-ec2



